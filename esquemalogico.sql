-- Schema para Sistema de Subastas Online
-- Normalizado a la Tercera Forma Normal (3NF)

-- =============================================
-- TABLA: USUARIOS
-- =============================================
CREATE TABLE usuarios (
    id_usuario NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    correo VARCHAR2(150) UNIQUE NOT NULL,
    contrasena VARCHAR2(255) NOT NULL, -- Hash de la contraseña
    rut VARCHAR2(12) UNIQUE NOT NULL,
    numero_telefono VARCHAR2(15),
    direccion VARCHAR2(500),
    presupuesto NUMBER(10,2) DEFAULT 5000.00,
    fecha_registro DATE DEFAULT SYSDATE,
    estado VARCHAR2(20) DEFAULT 'ACTIVO' CHECK (estado IN ('ACTIVO', 'INACTIVO', 'SUSPENDIDO'))
);

-- =============================================
-- TABLA: CATEGORIAS
-- =============================================
CREATE TABLE categorias (
    id_categoria NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre_categoria VARCHAR2(100) NOT NULL UNIQUE,
    descripcion VARCHAR2(500)
);

-- =============================================
-- TABLA: PRODUCTOS
-- =============================================
CREATE TABLE productos (
    id_producto NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre_producto VARCHAR2(200) NOT NULL,
    descripcion_producto CLOB,
    precio_inicial NUMBER(10,2) NOT NULL CHECK (precio_inicial > 0),
    precio_actual NUMBER(10,2) NOT NULL,
    imagen_url VARCHAR2(500),
    id_categoria NUMBER,
    id_usuario_propietario NUMBER NOT NULL,
    fecha_creacion DATE DEFAULT SYSDATE,
    estado_producto VARCHAR2(20) DEFAULT 'DISPONIBLE' 
        CHECK (estado_producto IN ('DISPONIBLE', 'EN_SUBASTA', 'VENDIDO', 'RETIRADO')),
    CONSTRAINT fk_producto_categoria FOREIGN KEY (id_categoria) REFERENCES categorias(id_categoria),
    CONSTRAINT fk_producto_propietario FOREIGN KEY (id_usuario_propietario) REFERENCES usuarios(id_usuario)
);

-- =============================================
-- TABLA: SUBASTAS
-- =============================================
CREATE TABLE subastas (
    id_subasta NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_producto NUMBER NOT NULL,
    fecha_inicio DATE DEFAULT SYSDATE,
    fecha_fin DATE NOT NULL,
    duracion_segundos NUMBER DEFAULT 180, -- Duración en segundos
    precio_final NUMBER(10,2),
    id_ganador NUMBER,
    estado_subasta VARCHAR2(20) DEFAULT 'ACTIVA' 
        CHECK (estado_subasta IN ('PENDIENTE', 'ACTIVA', 'FINALIZADA', 'CANCELADA')),
    CONSTRAINT fk_subasta_producto FOREIGN KEY (id_producto) REFERENCES productos(id_producto),
    CONSTRAINT fk_subasta_ganador FOREIGN KEY (id_ganador) REFERENCES usuarios(id_usuario),
    CONSTRAINT chk_fecha_fin CHECK (fecha_fin > fecha_inicio)
);

-- =============================================
-- TABLA: PUJAS
-- =============================================
CREATE TABLE pujas (
    id_puja NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_subasta NUMBER NOT NULL,
    id_usuario NUMBER NOT NULL,
    monto_puja NUMBER(10,2) NOT NULL CHECK (monto_puja > 0),
    fecha_puja DATE DEFAULT SYSDATE,
    tipo_puja VARCHAR2(20) DEFAULT 'USUARIO' CHECK (tipo_puja IN ('USUARIO', 'BOT')),
    es_ganadora VARCHAR2(1) DEFAULT 'N' CHECK (es_ganadora IN ('S', 'N')),
    CONSTRAINT fk_puja_subasta FOREIGN KEY (id_subasta) REFERENCES subastas(id_subasta),
    CONSTRAINT fk_puja_usuario FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario)
);

-- =============================================
-- TABLA: ESTADOS_ENVIO
-- =============================================
CREATE TABLE estados_envio (
    id_estado NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre_estado VARCHAR2(50) NOT NULL UNIQUE,
    descripcion VARCHAR2(200)
);

-- =============================================
-- TABLA: DIRECCIONES_ENVIO
-- =============================================
CREATE TABLE direcciones_envio (
    id_direccion NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    calle VARCHAR2(200) NOT NULL,
    numero VARCHAR2(10),
    comuna VARCHAR2(100) NOT NULL,
    ciudad VARCHAR2(100) NOT NULL,
    region VARCHAR2(100) NOT NULL,
    codigo_postal VARCHAR2(10),
    referencias VARCHAR2(500)
);

-- =============================================
-- TABLA: ENVIOS
-- =============================================
CREATE TABLE envios (
    numero_envio NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_subasta NUMBER NOT NULL,
    id_usuario_destinatario NUMBER NOT NULL,
    id_direccion_origen NUMBER NOT NULL,
    id_direccion_destino NUMBER NOT NULL,
    id_estado_envio NUMBER NOT NULL,
    fecha_envio DATE DEFAULT SYSDATE,
    fecha_entrega_estimada DATE,
    fecha_entrega_real DATE,
    empresa_transporte VARCHAR2(100),
    codigo_seguimiento VARCHAR2(100) UNIQUE,
    costo_envio NUMBER(8,2) DEFAULT 0,
    observaciones VARCHAR2(1000),
    CONSTRAINT fk_envio_subasta FOREIGN KEY (id_subasta) REFERENCES subastas(id_subasta),
    CONSTRAINT fk_envio_destinatario FOREIGN KEY (id_usuario_destinatario) REFERENCES usuarios(id_usuario),
    CONSTRAINT fk_envio_origen FOREIGN KEY (id_direccion_origen) REFERENCES direcciones_envio(id_direccion),
    CONSTRAINT fk_envio_destino FOREIGN KEY (id_direccion_destino) REFERENCES direcciones_envio(id_direccion),
    CONSTRAINT fk_envio_estado FOREIGN KEY (id_estado_envio) REFERENCES estados_envio(id_estado)
);

-- =============================================
-- TABLA: TRANSACCIONES
-- =============================================
CREATE TABLE transacciones (
    id_transaccion NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_usuario NUMBER NOT NULL,
    tipo_transaccion VARCHAR2(20) NOT NULL CHECK (tipo_transaccion IN ('RECARGA', 'PUJA', 'REEMBOLSO')),
    monto NUMBER(10,2) NOT NULL,
    fecha_transaccion DATE DEFAULT SYSDATE,
    descripcion VARCHAR2(500),
    id_puja NUMBER, -- Solo para transacciones de tipo PUJA
    CONSTRAINT fk_transaccion_usuario FOREIGN KEY (id_usuario) REFERENCES usuarios(id_usuario),
    CONSTRAINT fk_transaccion_puja FOREIGN KEY (id_puja) REFERENCES pujas(id_puja)
);

-- =============================================
-- ÍNDICES PARA OPTIMIZACIÓN
-- =============================================
CREATE INDEX idx_usuarios_correo ON usuarios(correo);
CREATE INDEX idx_usuarios_rut ON usuarios(rut);
CREATE INDEX idx_productos_categoria ON productos(id_categoria);
CREATE INDEX idx_productos_propietario ON productos(id_usuario_propietario);
CREATE INDEX idx_subastas_producto ON subastas(id_producto);
CREATE INDEX idx_subastas_estado ON subastas(estado_subasta);
CREATE INDEX idx_pujas_subasta ON pujas(id_subasta);
CREATE INDEX idx_pujas_usuario ON pujas(id_usuario);
CREATE INDEX idx_pujas_fecha ON pujas(fecha_puja);
CREATE INDEX idx_envios_subasta ON envios(id_subasta);
CREATE INDEX idx_envios_estado ON envios(id_estado_envio);
CREATE INDEX idx_transacciones_usuario ON transacciones(id_usuario);

-- =============================================
-- SECUENCIAS (Alternativa a IDENTITY)
-- =============================================
-- Si prefieres usar secuencias tradicionales en lugar de IDENTITY:
/*
CREATE SEQUENCE seq_usuarios START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_productos START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_subastas START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_pujas START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE seq_envios START WITH 1 INCREMENT BY 1;
*/

-- =============================================
-- DATOS INICIALES
-- =============================================

-- Insertar categorías iniciales
INSERT INTO categorias (nombre_categoria, descripcion) VALUES 
('Electrónicos', 'Dispositivos electrónicos y tecnología'),
('Gaming', 'Productos relacionados con videojuegos'),
('Deportes', 'Artículos deportivos y recreativos'),
('Coleccionables', 'Cartas, figuras y objetos coleccionables'),
('Hogar', 'Artículos para el hogar y decoración');

-- Insertar estados de envío
INSERT INTO estados_envio (nombre_estado, descripcion) VALUES 
('PENDIENTE', 'Envío pendiente de procesamiento'),
('PREPARANDO', 'Preparando el paquete para envío'),
('EN_TRANSITO', 'Paquete en camino al destinatario'),
('EN_REPARTO', 'Paquete en reparto local'),
('ENTREGADO', 'Paquete entregado exitosamente'),
('DEVUELTO', 'Paquete devuelto al remitente'),
('PERDIDO', 'Paquete extraviado');

-- =============================================
-- TRIGGERS PARA LÓGICA DE NEGOCIO
-- =============================================

-- Trigger para actualizar precio actual del producto cuando hay una nueva puja
CREATE OR REPLACE TRIGGER trg_actualizar_precio_producto
    AFTER INSERT ON pujas
    FOR EACH ROW
DECLARE
    v_id_producto NUMBER;
BEGIN
    -- Obtener el ID del producto desde la subasta
    SELECT p.id_producto INTO v_id_producto
    FROM subastas s 
    JOIN productos p ON s.id_producto = p.id_producto
    WHERE s.id_subasta = :NEW.id_subasta;
    
    -- Actualizar el precio actual del producto
    UPDATE productos 
    SET precio_actual = :NEW.monto_puja
    WHERE id_producto = v_id_producto;
END;
/

-- Trigger para registrar transacciones automáticamente
CREATE OR REPLACE TRIGGER trg_registrar_transaccion_puja
    AFTER INSERT ON pujas
    FOR EACH ROW
BEGIN
    INSERT INTO transacciones (id_usuario, tipo_transaccion, monto, descripcion, id_puja)
    VALUES (:NEW.id_usuario, 'PUJA', :NEW.monto_puja, 
            'Puja realizada en subasta ID: ' || :NEW.id_subasta, :NEW.id_puja);
END;
/

COMMIT;